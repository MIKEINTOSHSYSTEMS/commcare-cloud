# If "pull CommCare HQ source" fails with any of these messages
# - fatal: destination path '/home/cchq/www/dev/code_root' already exists and is not an empty directory.
# - /home/cchq/www/dev/code_root/.git: Permission denied
# Uncomment these lines
#- name: delete staticfiles
#  become: yes
#  file:
#    path: "{{ code_home }}"
#    state: absent

- import_tasks: www_log_dir.yml
  tags: logging

- name: install apt requirements for machines running hq code
  apt:
    name:
      - libxml2-dev
      - libxmlsec1-dev
      - libxmlsec1-openssl
  tags:
    - hq-apt-requirements

- name: set correct permission on /home/cchq
  become: yes
  file:
    path: "{{ cchq_home }}"
    owner: cchq
    group: cchq

- name: add deploy keys
  become: yes
  copy:
    src: "{{ env_files_dir }}/{{ item.key }}"
    dest: "{{ cchq_home }}/.ssh/{{ item.value }}"
    owner: cchq
    group: cchq
    mode: 0600
  loop: "{{ deploy_keys|dict2items }}"
  when: deploy_keys is defined

- name: Force GIT SSH to use port 443
  become: yes
  become_user: "{{ cchq_user }}"
  blockinfile:
    dest: "{{ cchq_home }}/.ssh/config"
    create: yes
    block: |
      Host github.com
        Hostname ssh.github.com
        Port 443

- name: create required directories
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ code_releases }}"

- name: create required directories
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0777
    state: directory
  with_items:
    - "{{ service_home }}"
  tags: services

- name: check for existing release
  stat: path="{{ code_home }}/localsettings.py"
  register: current_release

- block:
  - name: Clone CommCare source repository
    include_tasks: git_repository.yml
    loop:
      - url: "{{ commcarehq_repository }}"
        version: "{{ commcarehq_version }}"
        requirements_path: "requirements/prod-requirements.txt"

  - name: Clone additional source repositories
    include_tasks: git_repository.yml
    loop: "{{ git_repositories }}"
    when: git_repositories

  - name: Link source to code_home
    become: true
    file:
      state: link
      src: "{{ code_source }}"
      dest: "{{ code_home }}"
      owner: "{{ cchq_user }}"
      group: "{{ cchq_user }}"

  # This task has the additional effect of creating the virtualenv
  - name: Upgrade python packages
    become: true
    pip:
      name:
        - pip
        - setuptools
      state: latest
      virtualenv: "{{ virtualenv_home }}"
      virtualenv_python: "{{ python_name }}"
    tags:
      - py3

  - name: install pip requirements if py3 tag specified
    become: true
    pip:
      requirements: "{{ code_home }}/requirements/prod-requirements.txt"
      virtualenv: "{{ virtualenv_home }}"
      chdir: "{{ code_home }}"
    tags:
      - never  # means only when the following tag is specified
      - py3
    when: not testing|default(False)

  when: not current_release.stat.exists

- name: copy localsettings
  become: true
  template:
    src: localsettings.py.j2
    dest: "{{ code_home }}/localsettings.py"
  tags:
    - localsettings
    - hq-localsettings

- name: chown clone
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    recurse: yes
  loop:
    - "{{ code_source }}"
    - "{{ virtualenv_source }}"
    - "{{ code_home }}"
  tags:
    - py3

- name: chown localsettings
  become: true
  file:
    path: "{{ code_home }}/localsettings.py"
    state: file
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0600
  tags:
    - localsettings
    - hq-localsettings
