---

- name: Install pgbouncer
  package: name=pgbouncer state=present
  notify: Stop default pgbouncer
  tags:
    - pgbouncer

- name: Install systemd unit
  template: src=pgbouncer-multiprocess@.service.j2 dest=/etc/systemd/system/pgbouncer-multiprocess@.service
  notify: Reload systemd
  tags:
    - pgbouncer

- name: pgbouncer defaults
  template: src=pgbouncer.defaults.j2 dest=/etc/default/pgbouncer
  tags:
    - pgbouncer

- name: Make sure nofile ulimit is high
  lineinfile:
    path: /etc/default/pgbouncer
    regexp: '^ULIMIT='
    line: 'ULIMIT="-n 65536"'
  tags:
    - pgbouncer
  when: not ansible_check_mode

- name: pgbouncer kernel settings
  become: yes
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/99-commcare-cloud.conf
    reload: yes
  with_dict: "{{ pgbouncer_kernel_settings }}"

- name: Clean up possible previous instances
  shell: |
    systemctl stop pgbouncer-multiprocess@*
    systemctl disable pgbouncer-multiprocess@*
    rm -rf {{ pgbouncer_config_home }}/pgbouncer-*.ini
    rm -rf {{ pgbouncer_config_home }}/userlist-*.txt
    rm -rf /var/run/postgresql/pgbouncer-*
  tags:
    - configure

- name: pgbouncer configuration
  template: src=pgbouncer.ini.j2 dest="{{ pgbouncer_ini }}"
  notify: Restart pgbouncer
  tags:
    - pgbouncer
    - configure
  with_sequence: count="{{ pgbouncer_processes | default(1) }}"

- name: pgbouncer users
  template: src=pgbouncer.users.j2 dest="{{ pgbouncer_users }}"
  notify: Restart pgbouncer
  tags:
    - pgbouncer
    - configure
  with_sequence: count="{{ pgbouncer_processes | default(1) }}"

# Allows to execute task only when a tag is specified: https://serverfault.com/a/748864
- shell: /bin/true
  changed_when: false
  register: no_tags

- name: Restarts pgbouncer (affect max open files limit)
  command: /bin/true
  notify: Restart pgbouncer
  when: no_tags is not defined
  tags: after-reboot

- name: pgbouncer monit config
  become: yes
  template:
    src: "monit.pgbouncer.j2"
    dest: "/etc/monit/conf.d/pgbouncer"
    group: root
    owner: root
    mode: 0640
  notify: reload monit
  tags: monit

- meta: flush_handlers

- monit:
    name: pgbouncer
    state: monitored
  tags: monit
  ignore_errors: "{{ ansible_check_mode }}"
  register: result
  until: not result.failed or 'process not presently configured with monit' not in result.msg
  retries: 5
  delay: 20

