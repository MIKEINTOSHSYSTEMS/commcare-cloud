# NOTE this playbook can be used to deploy a new version of commcare-hq. The
# similarly named deploy_commcarehq.yml playbook is used to configure machines
# to run commcare-hq, and is expected to be run less frequently than this one.

- name: Deploy CommCare HQ
  hosts:
    - webworkers
    - celery
    - pillowtop
    - proxy
    - django_manage
  any_errors_fatal: true
  tasks:
    - name: Get code version
      include_role:
        name: deploy_hq
        tasks_from: get_code_version
      tags: private_release
      when: code_version is not defined

    - import_role: {name: deploy_hq}
      vars:
        if_not_done: setup_release_common
      tags: private_release

    - import_role: {name: deploy_hq}
      vars:
        if_not_done: setup_release

- name: Copy static JS
  hosts: proxy
  any_errors_fatal: true
  tasks:
    - include_role: {name: deploy_hq}
      vars:
        if_not_done: copy_release_files
        item: staticfiles/CACHE/js

- name: Install javascript dependencies
  hosts: [webworkers, celery, proxy]
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: yarn_install

- name: Collect static files
  hosts: [webworkers, proxy]
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: staticfiles_collect

- name: Compress static files
  hosts: proxy[0]
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: staticfiles_compress

- name: Update translations
  hosts:
    - webworkers
    - celery
    - pillowtop
    - proxy
    - django_manage
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: update_translations

- name: Run migrations
  hosts: webworkers[0]
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: run_migrations

- name: Pull staticfiles manifest
  hosts: webworkers
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: staticfiles_pull_manifest

- name: Pull staticfiles cache
  hosts: proxy[1:]
  any_errors_fatal: true
  tasks:
    - name: Assert single proxy host
      fail:
        msg: >-
          There should be only one 'proxy' host. Ensure that only one host is
          assigned to the 'proxy' group, or set 'shared_dir_for_staticfiles'.
      when: not shared_dir_for_staticfiles

    - import_role: {name: deploy_hq}
      vars:
        if_not_done: staticfiles_pull_cache

- name: Pre-restart tasks
  hosts:
    - webworkers
    - celery
    - pillowtop
    - proxy
    - django_manage
  vars_files:
    - roles/deploy_hq/vars/main.yml
  become: true
  become_user: '{{ cchq_user }}'
  any_errors_fatal: true
  tasks:
    - import_role: {name: deploy_hq}
      vars:
        if_not_done: clean_releases

    - name: Check release
      command:
        cmd: ./manage.py check {{ item }}
        chdir: '{{ code_source }}'
      register: stop_loop_hack
      when: not stop_loop_hack.failed | default(False)
      run_once: true
      loop:
        - '--deploy'
        - '--deploy -t database'

    - import_role:
        name: deploy_hq
        tasks_from: update_current

    - name: Set in-progress flag
      command:
        cmd: ./manage.py deploy_in_progress
        chdir: '{{ code_source }}'
      run_once: true

- name: Restart non-webworker services
  hosts:
    - celery
    - pillowtop
    - proxy
  become: true
  any_errors_fatal: true
  tasks:
    - name: Restart services
      command: supervisorctl {{ item }}
      loop:
        - stop all
        - reread
        - update
        - start all
      when: inventory_hostname not in groups.webworkers

- name: Rolling restart webworker services
  hosts: webworkers
  serial: ["10%", "40%", "100%"]
  become: true
  any_errors_fatal: true
  pre_tasks:
    - name: Decommission hosts
      import_role:
        name: deploy_hq
        tasks_from: commission_hosts
      vars:
        comment: true
  post_tasks:
    - name: Recommission hosts
      import_role:
        name: deploy_hq
        tasks_from: commission_hosts
      vars:
        comment: false
  tasks:
    - name: Restart
      command: supervisorctl {{ item }}
      loop:
        - stop all
        - reread
        - update
        - start all

- name: Record successful release
  hosts:
    - webworkers
    - celery
    - pillowtop
    - proxy
    - django_manage
  vars_files:
    - roles/deploy_hq/vars/main.yml
  become: true
  become_user: '{{ cchq_user }}'
  tasks:
    - name: Record successful release
      lineinfile:
        path: '{{ www_home }}/RELEASES.txt'
        line: '{{ code_source }}'
        create: true
        mode: 0644
      when: record_success | default(True)
